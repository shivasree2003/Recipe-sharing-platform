import express from "express";
import mongoose from "mongoose";
import cors from "cors";
import dotenv from "dotenv";
import { useEffect, useState } from "react";
import axios from "axios";

dotenv.config();
const app = express();
app.use(express.json());
app.use(cors());

mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true,
}).then(() => console.log("MongoDB Connected"))
.catch((err) => console.log(err));

const recipeSchema = new mongoose.Schema({
  title: String,
  ingredients: [String],
  instructions: String,
  image: String,
}, { timestamps: true });

const Recipe = mongoose.model("Recipe", recipeSchema);

app.get("/api/recipes", async (req, res) => {
  const recipes = await Recipe.find();
  res.json(recipes);
});

app.post("/api/recipes", async (req, res) => {
  const recipe = new Recipe(req.body);
  await recipe.save();
  res.json(recipe);
});

app.delete("/api/recipes/:id", async (req, res) => {
  await Recipe.findByIdAndDelete(req.params.id);
  res.json({ message: "Deleted" });
});

app.listen(5000, () => console.log("Server running on port 5000"));

function App() {
  const [recipes, setRecipes] = useState([]);
  const [form, setForm] = useState({ title: "", ingredients: "", instructions: "", image: "" });

  useEffect(() => {
    axios.get("http://localhost:5000/api/recipes").then(({ data }) => setRecipes(data));
  }, []);

  const addRecipe = async () => {
    const { data } = await axios.post("http://localhost:5000/api/recipes", form);
    setRecipes([...recipes, data]);
  };

  const deleteRecipe = async (id) => {
    await axios.delete(http://localhost:5000/api/recipes/${id});
    setRecipes(recipes.filter((r) => r._id !== id));
  };

  return (
    <div>
      <h1>Recipe Sharing Platform</h1>
      <input placeholder="Title" onChange={(e) => setForm({ ...form, title: e.target.value })} />
      <input placeholder="Ingredients" onChange={(e) => setForm({ ...form, ingredients: e.target.value.split(",") })} />
      <textarea placeholder="Instructions" onChange={(e) => setForm({ ...form, instructions: e.target.value })} />
      <input placeholder="Image URL" onChange={(e) => setForm({ ...form, image: e.target.value })} />
      <button onClick={addRecipe}>Add Recipe</button>

      {recipes.map((recipe) => (
        <div key={recipe._id}>
          <h2>{recipe.title}</h2>
          <img src={recipe.image} alt={recipe.title} width="100" />
          <p>{recipe.instructions}</p>
          <button onClick={() => deleteRecipe(recipe._id)}>Delete</button>
        </div>
      ))}
    </div>
  );
}

export default App
